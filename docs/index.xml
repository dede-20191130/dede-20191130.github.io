<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>学習者のブログ　◆プログラミング等</title>
    <link>https://dede-20191130.github.io/learnerBlog/</link>
    <description>Recent content on 学習者のブログ　◆プログラミング等</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Tue, 13 Oct 2020 09:37:47 +0900</lastBuildDate><atom:link href="https://dede-20191130.github.io/learnerBlog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[Access VBA] コントロールソースにユーザ定義関数を用いると列幅の自動調整が想定通りに機能しない問題の解決</title>
      <link>https://dede-20191130.github.io/learnerBlog/posts/2020/10/13/access-controlsource/</link>
      <pubDate>Tue, 13 Oct 2020 09:37:47 +0900</pubDate>
      
      <guid>https://dede-20191130.github.io/learnerBlog/posts/2020/10/13/access-controlsource/</guid>
      <description>この記事について Accessでフォーム（データシート型）を使用する際、 テキストボックスのコントロールソースとして文字列を返すユーザ定義関数を指定すると、 フォームの列幅の自動調整の動作が想定通りにならない問題がある。
例えば、ユーザ定義関数で長い文字列を取得すると、文字列がフィールドに収まりきらず見切れてしまう。
その解決策を模索した。
要約 ユーザ定義関数の呼び出しタイミングが FormのResizeプロシージャよりも後であるため、 対象のテキストボックスに関しては、
1Private Sub Form_Resize() 2 3 &amp;#39;...code 4 5 ctl.ColumnWidth = -2 6 7 &amp;#39;...code 8 9End Sub による自動調整が機能しない。
そのため、下記のいずれかの措置をとる。
 ユーザ定義関数の処理にControl.ColumnWidth = -2が追加された関数を作成する。 Resizeする際に長さを明示的に指定。  本文 前提 このようなテーブルT_01がある。
T_01をサブフォームに組み込んで、このようなフォームF_01（およびサブフォームSubF_01）を表示する。
このとき、各列ID、_Name、sizeの列幅を自動で調整したい。
また、あたらしくsize typeテキスト列を追加し、
sizeの値ごとにS,M,Lのサイズ記号を示す文字列「This is ○ type for he/she&#39;s size.」を格納したい。
こちらの列幅も自動で調整したい。
環境 Microsoft Access 2019
実装 サブフォームのResizeプロシージャで
各々のテキストボックスに対して
列幅を指定した。
コントロールのColumnWidthの値を-2と指定することで列幅が自動調整される。
1&amp;#39;****************************************************************************************** 2&amp;#39;*関数名 ：リサイズ 3&amp;#39;*機能 ： 4&amp;#39;*引数(1) ： 5&amp;#39;****************************************************************************************** 6Private Sub Form_Resize() 7 8 &amp;#39;定数 9 Const FUNC_NAME As String = &amp;#34;Form_Resize&amp;#34; 10 11 &amp;#39;変数 12 Dim ctl As Access.</description>
    </item>
    
    <item>
      <title>【Excel】非マクロのメール作成ツールを作成した</title>
      <link>https://dede-20191130.github.io/learnerBlog/posts/2020/07/18/create-nomarco-tool/</link>
      <pubDate>Sat, 18 Jul 2020 18:30:28 +0000</pubDate>
      
      <guid>https://dede-20191130.github.io/learnerBlog/posts/2020/07/18/create-nomarco-tool/</guid>
      <description>この記事について 以前作成した非マクロのメール作成ツールについての紹介記事。
こちら（Github）からツールをダウンロードできます。
概要 テーブルでデータを管理。
管理したデータからメールを作成。
画像紹介 記事：非マクロ（VBAの使用なし）であることの利点 こちらにまとめています。
⇛Excelのツール開発
関数（非マクロ）ツールとVBA使用ツールの比較
使用方法詳細 仕様、使用方法などは、
こちら（Github）に記載しています。</description>
    </item>
    
    <item>
      <title>【Excel VBA】見積書作成ツールを作成した</title>
      <link>https://dede-20191130.github.io/learnerBlog/posts/2020/07/16/create-estm/</link>
      <pubDate>Thu, 16 Jul 2020 08:05:13 +0000</pubDate>
      
      <guid>https://dede-20191130.github.io/learnerBlog/posts/2020/07/16/create-estm/</guid>
      <description>この記事について 以前作成した見積書作成ツール（Excel VBA）についての紹介記事。
こちら（Github）からツールをダウンロードできます。
概要 一枚～複数枚の見積書を作成する。
テンプレート見積書に設定したデータを挿入し、見積書格納先の別ブックを作成。
画像例 使用方法詳細 仕様、使用方法などは、
こちら（Github）に記載しています。</description>
    </item>
    
    <item>
      <title>Excelのツール開発：関数（非マクロ）ツールとVBA使用ツールの比較</title>
      <link>https://dede-20191130.github.io/learnerBlog/posts/2020/07/16/cmpr-tools/</link>
      <pubDate>Thu, 16 Jul 2020 06:14:50 +0000</pubDate>
      
      <guid>https://dede-20191130.github.io/learnerBlog/posts/2020/07/16/cmpr-tools/</guid>
      <description>この記事について Excelでデータ管理したりドキュメントを出力したりするツール（機能の多寡を問わず）を作成しようとする際に、
大別すると、次のような選択肢があるかと思われる。
 関数（マクロを使用しない。標準搭載の関数のみで実装）ツール VBA使用ツール  それぞれにメリット・デメリットがあるが、
個人的な見解として
それらをまとめてみたい。
サマリ（表） 最初にまとめとして表を記す。
    関数（非マクロ）ツール   VBAツール     開発難度   低   高     自由度   低   高     できること   データの管理（手入力、
データベースとの連携）
帳票等成果物の出力
・プリンター印刷
・PDF
メール作成、WebサイトのURL管理、ファイルパスの管理   データの管理（手入力、オリジナルフォームの入力、ファイル読み込み、データベースとの連携）
帳票等成果物の出力
・プリンター印刷
・PDF
・csvファイル
・その他、だいたいどのような形式でも可能
メール作成、WebサイトのURL管理、ファイルパスの管理（より高度なレベルで）
Webサイトのスクレイピング
Webサイトに対するHTTPリクエスト、レスポンス取得     作業精度向上のレベル   低   高     作業効率化のレベル   低   高     動作安定性   高   低     メンテナンス性   高   低      比較 作りやすさ エクセル関数は義務教育の関数の知識があれば使いやすいだろう。</description>
    </item>
    
    <item>
      <title>お問い合わせ</title>
      <link>https://dede-20191130.github.io/learnerBlog/about/</link>
      <pubDate>Wed, 15 Jul 2020 17:03:36 +0000</pubDate>
      
      <guid>https://dede-20191130.github.io/learnerBlog/about/</guid>
      <description>お問い合わせは下記メールアドレスからお願いします。
1044adad@gmail.com。</description>
    </item>
    
  </channel>
</rss>
