<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>2020-11 on 学習者のブログ　◆プログラミング等</title>
    <link>https://dede-20191130.github.io/learnerBlog/archives/2020-11/</link>
    <description>Recent content in 2020-11 on 学習者のブログ　◆プログラミング等</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Sun, 08 Nov 2020 10:26:29 +0900</lastBuildDate><atom:link href="https://dede-20191130.github.io/learnerBlog/archives/2020-11/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[Access VBA] フォームのコントロールに対してWithEventsでイベントリスナークラスを作成する際に気をつけなければならないこと</title>
      <link>https://dede-20191130.github.io/learnerBlog/posts/2020/11/08/access-control-withevents/</link>
      <pubDate>Sun, 08 Nov 2020 10:26:29 +0900</pubDate>
      
      <guid>https://dede-20191130.github.io/learnerBlog/posts/2020/11/08/access-control-withevents/</guid>
      <description>この記事について Accessでフォーム上のコントロール（テキストボックス、コンボボックスなど）で、 イベント処理を共通化するためにWithEventsステートメントを用いてイベントリスナークラスを作成することを考える。
その際に、ExcelでWitheventsを使用するときと同じようなコードで作成すると、
せっかく設定したクラス側のイベントが発火してくれない事態が生じた。
その事例と、講じた対策二種類について記したい。
説明のために作成したAccessファイルとソースコードはこちらでダウンロードできます。
事例 次のような画面とコードで、
丸囲みのコンボボックスをキーボード入力できないようにする。 （先に正常に動かないコードのほうを示す）
共通化のために、
コンボボックスのKeyDownイベント関数をクラス化する。
検証のために、コンボボックスのイベント発火をトレースし、
テキストボックスにログを出力できるようにした。
画面 オブジェクトのプロパティ    名前 種類 説明     cmb_withEventsTest コンボボックス 直接のキーボード入力を禁止する   txt_EventLog テキストボックス コンボボックスの
イベントログが表示される    コード 下記コードは正常に動かない（myComboBox_KeyDown関数が発火しない）
フォームモジュール：MainForm 1Option Compare Database 2Option Explicit 3 4&amp;#39;************************** 5&amp;#39;*MainForm 6&amp;#39;************************** 7 8&amp;#39;定数 9 10 11&amp;#39;変数 12Private objCmbListener As clsCmbListener 13 14 15 16&amp;#39;****************************************************************************************** 17&amp;#39;*getter/setter 18&amp;#39;****************************************************************************************** 19 20 21 22 23&amp;#39;****************************************************************************************** 24&amp;#39;*関数名 ：Form_Load 25&amp;#39;*機能 ： 26&amp;#39;*引数(1) ： 27&amp;#39;****************************************************************************************** 28Private Sub Form_Load() 29 30 &amp;#39;定数 31 Const FUNC_NAME As String = &amp;#34;Form_Load&amp;#34; 32 33 &amp;#39;変数 34 Dim dicInfo As Object 35 36 On Error GoTo ErrorHandler 37 38 &amp;#39;イベントクラス設定 39 Set objCmbListener = New clsCmbListener: Set objCmbListener.</description>
    </item>
    
    <item>
      <title>[Excel VBA] 個人的に作業がはかどった自作Excelショートカット</title>
      <link>https://dede-20191130.github.io/learnerBlog/posts/2020/11/05/own-excel-shortcut/</link>
      <pubDate>Thu, 05 Nov 2020 00:48:58 +0900</pubDate>
      
      <guid>https://dede-20191130.github.io/learnerBlog/posts/2020/11/05/own-excel-shortcut/</guid>
      <description>この記事について Excelから文章を別のファイルや文書に移したり、
Excelのシート上で四角形や矢印などの図形の切り貼りや、図形でフローチャート、模式図を作成する機会はわりと多いかと思う。
そうした際に、
VBAを用いて、Excelにもともと備わっていないショートカットをいくつか登録しておくと、作業スピードが上がったため、
紹介したい。
ちなみに、クイックアクセスツールバーを用いて、
[Altキー　+　数字] でいくつかのショートカットキーを拡張することはできるが、
個人的にAltキーからの数字キー押下はあまり押しやすいキーではないため、最小限でしか登録はしていない。
また、クイックアクセスツールバーで対応が難しいショートカットも存在する。
一覧 このようなショートカットを作成した。
   機能 どんなときに使う？ 割り当てたキー     対象のセルから
テキストのみコピーする 文字列両端の
ダブルクォーテーション無しで
セルの文章を取得したいとき Ctrl + Shift + K   選択したオブジェクト（画像、図形等）の
最前面化・最背面化 入り組んだ模式図などを
作成するとき Ctrl + Shift + B   Excelのイベント一時停止 マクロ有ブックで、
開くと自動的にフォームなどが開かれるExcelブックを、
それらの処理なしで開きたいとき Ctrl + Shift + M    自作ショートカットのためのマクロ登録方法 こちらに分かりやすい記事がありました。
&amp;quot;エクセル初心者も出来る！マクロでショートカットキーを作成する方法&amp;quot;
①Alt + F11キーでVBEを開く。
②標準モジュールにプロシージャを記入する。
③ブックの画面に戻り、Alt + F8を押して、マクロの設定画面を開く。</description>
    </item>
    
    <item>
      <title>Podcastを使っていろいろと勉強を始めたこと</title>
      <link>https://dede-20191130.github.io/learnerBlog/posts/2020/11/03/learn-by-podcast/</link>
      <pubDate>Tue, 03 Nov 2020 00:59:01 +0900</pubDate>
      
      <guid>https://dede-20191130.github.io/learnerBlog/posts/2020/11/03/learn-by-podcast/</guid>
      <description>この記事について 最近Podcastでけっこう面白い歴史の解説ラジオや
大学の講義を聞くことができると知った。
Podcastで勉強をし始めたことの発端や利点、
面白かった番組等にフォーカスして話したい。
発端 日常生活を送っていると、
スキマ時間をどう有意義に過ごすかということに考えが走ることもあると思う。
私の場合、
読書よりも（読書は王道ではあるが）、
体を動かしながらできること、という観点で
色々調べてみた。
最初はYoutubeで歴史番組等を見ていたが、
徐々にPodcastに興味が湧いてきた。
今は主にPodcastの方を使っている。
利点 ◆空手で学べるため、いろいろ捗る 空手で（手に何も持たずに）勉強できるため、
勉強するという気負いも持つこと無く気軽に着手できる。
また、散歩、家事（洗濯、料理、掃除）の際に
勉強しながらできるため、
億劫だった家事をやる気が生まれてきた。
生活の秩序の向上にも寄与しているかと思う。
◆ジャンルが幅広い 政治経済、歴史、科学技術、
趣味等々
一通りジャンルが揃っているかと思う。
個人的に歴史ラジオが一番はまった。
◆新しい領域の知識を取り入れようという気分になる ふと目についた番組を気軽に聞けるため、
以前は興味がなかったジャンルの知識を得られる機会がある。
最近はそれで古代中国史を聴いたりした。
面白かった番組           歴史を面白く学ぶコテンラジオ （COTEN RADIO）
-日本史から世界史まで、個人の偉人のエピソードから世界経済の勃興と仕組みまで幅広く学べる。  link   オカモトの歴史実況中継
-軽妙な語りで世界史を学べる。
個人的に殷王朝から近代中国までの中国史が面白かった。  link   #01「原子炉工学」　（オープン教材の作成・活用による実践的原子力バックエンド教育プログラム ）
-北海道大学の工学分野講座シリーズのよう。
北大はこれ以外にも色々と講義を開放している。動画付き。  link    </description>
    </item>
    
    <item>
      <title>[Excel VBA]ポリモーフィズムを用いて、IF文を使わずラジオボタンごとの処理分岐を行う</title>
      <link>https://dede-20191130.github.io/learnerBlog/posts/2020/11/01/polymorphism-radiobutton/</link>
      <pubDate>Sun, 01 Nov 2020 16:44:24 +0900</pubDate>
      
      <guid>https://dede-20191130.github.io/learnerBlog/posts/2020/11/01/polymorphism-radiobutton/</guid>
      <description>この記事について VBAにおいてポリモーフィズムの考え方によりコーディングを行う一例。
CallByName関数によるポリモーフィズムの考え方と、
ラジオボタン（オプションボタン）オブジェクトのtagプロパティを用いて、
IFステートメントやSelect Caseステートメントを使わずに処理分岐を行う実装例。
説明のために作成したExcelファイルとソースコードはこちらでダウンロードできます。
作成環境 Windows10
MSOffice 2016
前提 下のような画面があり、
ラジオボタンを選択し、実行ボタンを押下することで
ラジオボタンの種類に応じた処理を行う。
   名称 画像     フォーム    現在時刻を表示するラジオボタンを選択    ユーザ名を表示するラジオボタンを選択    あいさつを表示するラジオボタンを選択     オブジェクトのプロパティ    名前 種類 Caption GourpName Tag Value（初期値）     rdo_showCurrent ラジオボタン 現在時刻を表示する Group01 Current True   rdo_showUser ラジオボタン ユーザ名を表示する Group01 User False   rdo_showGreeting ラジオボタン あいさつを表示する Group01 Greeting False   btn_execute コマンドボタン 実行 -- -- --    関数概要    名前 所属モジュール/クラス 種類 機能     btn_execute_Click F_Main Subプロシージャ btn_executeのClickメソッド</description>
    </item>
    
    <item>
      <title>[Excel VBA]選択フォルダ配下のエクセルブックの全シートでA1にカーソル移動させるツールを作成した</title>
      <link>https://dede-20191130.github.io/learnerBlog/posts/2020/11/01/excel-a1-tool/</link>
      <pubDate>Sun, 01 Nov 2020 12:05:43 +0900</pubDate>
      
      <guid>https://dede-20191130.github.io/learnerBlog/posts/2020/11/01/excel-a1-tool/</guid>
      <description>このツールについて 下記Qiita記事のプログラムを、フォルダ配下のExcelブックに対して再帰的に/非再帰的に適用できるように
機能をもたせたツールです。
記事リンク
ツールはこちらからダウンロードできます。
また、ソースコードもこちらに置いてあります。
作成環境 Windows10
MSOffice 2016
機能  エクセルブックに対して、すべてのシートのカーソルを左上セル（A1セル）に合わせ、一番左のシートをアクティブにした状態にする。 ダイアログで選択したフォルダ配下のすべてのエクセルブック（xls,xlsx,xlsm）に対して処理を行う。 ファイル探索を再帰的に、または非再帰的に行う  画面    名称 画像     起動後に表示されるフォーム     </description>
    </item>
    
  </channel>
</rss>
