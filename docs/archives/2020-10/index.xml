<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>2020-10 on 学習者のブログ　◆プログラミング等</title>
    <link>https://dede-20191130.github.io/learnerBlog/archives/2020-10/</link>
    <description>Recent content in 2020-10 on 学習者のブログ　◆プログラミング等</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Fri, 30 Oct 2020 00:00:04 +0900</lastBuildDate><atom:link href="https://dede-20191130.github.io/learnerBlog/archives/2020-10/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[Powershell] Windowsで更新日時が〇〇以降のファイルのパスの一覧を取得するには</title>
      <link>https://dede-20191130.github.io/learnerBlog/posts/2020/10/30/ps-refinement-last/</link>
      <pubDate>Fri, 30 Oct 2020 00:00:04 +0900</pubDate>
      
      <guid>https://dede-20191130.github.io/learnerBlog/posts/2020/10/30/ps-refinement-last/</guid>
      <description>この記事について 普段と別のPC（Windows）での作業をする機会があった。
作業後にもとのPCに持っていく必要のある、差分あり（作業による変更あり）のファイルを選別する必要があり、
作業フォルダにおいて、更新日時が本日の9:00以降であるファイルを絞りこむコマンドが欲しかった。
Git等のバージョン管理アプリがインストールされているPCならば、
変更内容を適宜コミットしておけばアプリが自動的にうまい具合にやってくれるので、
このようなコマンドは必要ないのだけれど。
使用環境 PSVersion 5.1
コマンド コンソールに出力
1ls -r -File | ?{$_.LastWriteTime -gt [Datetime]&amp;#34;2020/10/27 9:00:00&amp;#34;} | select  FullName ファイルに出力して見やすくする
1ls -r -File | ?{$_.LastWriteTime -gt [Datetime]&amp;#34;2020/10/27 9:00:00&amp;#34;} | select  FullName | ft  -A &amp;gt; &amp;#34;C:\temp\output.txt&amp;#34; エイリアス無しコマンドVer
1Get-ChildItem -Recurse -File | Where-Object{$_.LastWriteTime -gt [Datetime]&amp;#34;2020/10/27 18:00:00&amp;#34;} | Select-Object FullName | Format-Table -AutoSize &amp;gt; &amp;#34;C:\temp\output.txt&amp;#34;  Get-ChildItem -Recurse -File &amp;lt;- 再帰的にファイルのみの情報一覧を取得 $_.LastWriteTime -gt [Datetime]&amp;quot;2020/10/27 18:00:00&amp;quot; &amp;lt;- 日付文字列をDatetime型にキャストしてファイル情報と比較  </description>
    </item>
    
    <item>
      <title>[Access VBA] デザインビューのテーブル定義を表形式でエクスポートするAccessツールを作成した</title>
      <link>https://dede-20191130.github.io/learnerBlog/posts/2020/10/27/access-tabledef-tool/</link>
      <pubDate>Tue, 27 Oct 2020 20:29:45 +0900</pubDate>
      
      <guid>https://dede-20191130.github.io/learnerBlog/posts/2020/10/27/access-tabledef-tool/</guid>
      <description>概要 以前の記事で説明したエクスポート関数をツール化したもの（こちら）
ツール化することで、VBEを開いて関数をペーストする必要が無くなった。
また、他のAccessデータベースファイルの定義をエクスポートできるようになった。
画面で指定したAccessファイル（.mdb、.accdb）について、
すべてのテーブルのテーブル定義を表形式でエクスポートする。
エクスポート先は新規エクセルブック。テーブルデータがシートごとに格納される。
ツールはこちらからダウンロードできます。
また、ソースコードもこちらに置いてあります。
動作環境 Microsoft Officeが動作する環境。
32bit、64bitいずれも可。
機能一覧  テーブル定義の表形式でのエクスポート機能  ツールとしての長所  テーブル定義の一覧化および目視での把握が容易にできます。 手作業で表を作成するよりも効率的です。  使用方法 1. エクスポートするAccessファイルパスの選択 いずれかの方法で選択します。
1.エクスポート画面のテキストボックスに直接入力します。
2.参照ボタンをクリックします。
ファイル選択ダイアログにおいて出力対象のファイルを選択します。
テキストボックスにファイルパスが格納されます。
2. エクスポート エクスポートボタンを押下します。
対象のAccessファイルと同階層のフォルダに
次のようにエクセルファイルが出力されます。
デザインビュー表示に似せた様式で各情報が一覧できます。</description>
    </item>
    
    <item>
      <title>[Access VBA] デザインビューのテーブル定義を表形式でエクスポートする関数を作成した</title>
      <link>https://dede-20191130.github.io/learnerBlog/posts/2020/10/25/access-tabledef/</link>
      <pubDate>Sun, 25 Oct 2020 22:01:43 +0900</pubDate>
      
      <guid>https://dede-20191130.github.io/learnerBlog/posts/2020/10/25/access-tabledef/</guid>
      <description>この記事について Accessの各々のテーブルの内容をエクスポートする方法として、
 ナビゲーションバーのテーブルの右クリックメニューからエクスポート -&amp;gt; Excel、テキスト等形式を選択して出力 データベースツールタブのデータベース構造の解析 -&amp;gt; テーブル指定 -&amp;gt; 印刷、またはExcel、PDF等形式を選択して出力  の選択肢がある。
しかし、
前者は、フィールドの型や主キーの有無など、テーブルの詳細な情報はエクスポートできず、
後者は、詳細な情報をエクスポートできるが、各フィールドごとに単票形式でエクスポートデータが得られるため、デザインビューのように一覧としてテーブルの設定を把握することが難しい。
よって、既存の機能で対応できないため、
デザインビューのテーブル定義を表形式でエクスポートする関数を作成した。
作成環境 Microsoft Office 2019
機能 カレントプロジェクト（コードが貼り付けてあるAccessファイル）の
すべてのテーブルのテーブル定義を表形式でエクスポートする。
エクスポート先は新規エクセルブック。テーブルデータがシートごとに格納される。
関数概要    名前 種類 機能     exportTableDefTablesMain Subプロシージャ テーブル定義情報表形式エクスポートのMain関数   getTableDefArray Functionプロシージャ テーブルの定義情報を取得   getFieldTypeString Functionプロシージャ 引数フィールドのデータ型文字列を取得   getPKs Functionプロシージャ テーブルの主キーであるフィールド名を辞書として取得   getFKs Functionプロシージャ テーブルの外部キーであるフィールド名を辞書として取得   setWSName Functionプロシージャ 引数で指定されたエクセルシートの名前をセット    呼び出し関係  exportTableDefTablesMain  呼出 -&amp;gt; getTableDefArray  呼出 -&amp;gt; getFieldTypeString 呼出 -&amp;gt; getPKs 呼出 -&amp;gt; getFKs   呼出 -&amp;gt; setWSName    コード [exportTableDefTablesMain] 1&amp;#39;****************************************************************************************** 2&amp;#39;*関数名 ：exportTableDefTablesMain 3&amp;#39;*機能 ：テーブル定義情報テーブルを作成 4&amp;#39;*引数(1) ： 5&amp;#39;****************************************************************************************** 6Public Sub exportTableDefTablesMain() 7 8 &amp;#39;定数 9 Const FUNC_NAME As String = &amp;#34;exportTableDefTablesMain&amp;#34; 10 11 &amp;#39;変数 12 Dim xlApp As Object 13 Dim wb As Object 14 Dim tdf As DAO.</description>
    </item>
    
    <item>
      <title>[Access VBA] コントロールソースにユーザ定義関数を用いると列幅の自動調整が想定通りに機能しない問題の解決</title>
      <link>https://dede-20191130.github.io/learnerBlog/posts/2020/10/13/access-controlsource/</link>
      <pubDate>Tue, 13 Oct 2020 09:37:47 +0900</pubDate>
      
      <guid>https://dede-20191130.github.io/learnerBlog/posts/2020/10/13/access-controlsource/</guid>
      <description>この記事について Accessでフォーム（データシート型）を使用する際、 テキストボックスのコントロールソースとして文字列を返すユーザ定義関数を指定すると、 フォームの列幅の自動調整の動作が想定通りにならない問題がある。
例えば、ユーザ定義関数で長い文字列を取得すると、文字列がフィールドに収まりきらず見切れてしまう。
その解決策を模索した。
要約 ユーザ定義関数の呼び出しタイミングが FormのResizeプロシージャよりも後であるため、 対象のテキストボックスに関しては、
1Private Sub Form_Resize() 2 3 &amp;#39;...code 4 5 ctl.ColumnWidth = -2 6 7 &amp;#39;...code 8 9End Sub による自動調整が機能しない。
そのため、下記のいずれかの措置をとる。
 ユーザ定義関数の処理にControl.ColumnWidth = -2が追加された関数を作成する。 Resizeする際に長さを明示的に指定。  本文 前提 このようなテーブルT_01がある。
T_01をサブフォームに組み込んで、このようなフォームF_01（およびサブフォームSubF_01）を表示する。
このとき、各列ID、_Name、sizeの列幅を自動で調整したい。
また、あたらしくsize typeテキスト列を追加し、
sizeの値ごとにS,M,Lのサイズ記号を示す文字列「This is ○ type for he/she&#39;s size.」を格納したい。
こちらの列幅も自動で調整したい。
環境 Microsoft Access 2019
実装 サブフォームのResizeプロシージャで
各々のテキストボックスに対して
列幅を指定した。
コントロールのColumnWidthの値を-2と指定することで列幅が自動調整される。
1&amp;#39;****************************************************************************************** 2&amp;#39;*関数名 ：リサイズ 3&amp;#39;*機能 ： 4&amp;#39;*引数(1) ： 5&amp;#39;****************************************************************************************** 6Private Sub Form_Resize() 7 8 &amp;#39;定数 9 Const FUNC_NAME As String = &amp;#34;Form_Resize&amp;#34; 10 11 &amp;#39;変数 12 Dim ctl As Access.</description>
    </item>
    
  </channel>
</rss>
