<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>オブジェクト指向 on 学習者のブログ　◆プログラミング等</title>
    <link>https://dede-20191130.github.io/learnerBlog/tags/%E3%82%AA%E3%83%96%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E6%8C%87%E5%90%91/</link>
    <description>Recent content in オブジェクト指向 on 学習者のブログ　◆プログラミング等</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Sun, 08 Nov 2020 10:26:29 +0900</lastBuildDate><atom:link href="https://dede-20191130.github.io/learnerBlog/tags/%E3%82%AA%E3%83%96%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E6%8C%87%E5%90%91/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[Access VBA] フォームのコントロールに対してWithEventsでイベントリスナークラスを作成する際に気をつけなければならないこと</title>
      <link>https://dede-20191130.github.io/learnerBlog/posts/2020/11/08/access-control-withevents/</link>
      <pubDate>Sun, 08 Nov 2020 10:26:29 +0900</pubDate>
      
      <guid>https://dede-20191130.github.io/learnerBlog/posts/2020/11/08/access-control-withevents/</guid>
      <description>この記事について Accessでフォーム上のコントロール（テキストボックス、コンボボックスなど）で、 イベント処理を共通化するためにWithEventsステートメントを用いてイベントリスナークラスを作成することを考える。
その際に、ExcelでWitheventsを使用するときと同じようなコードで作成すると、
せっかく設定したクラス側のイベントが発火してくれない事態が生じた。
その事例と、講じた対策二種類について記したい。
説明のために作成したAccessファイルとソースコードはこちらでダウンロードできます。
事例 次のような画面とコードで、
丸囲みのコンボボックスをキーボード入力できないようにする。 （先に正常に動かないコードのほうを示す）
共通化のために、
コンボボックスのKeyDownイベント関数をクラス化する。
検証のために、コンボボックスのイベント発火をトレースし、
テキストボックスにログを出力できるようにした。
画面 オブジェクトのプロパティ    名前 種類 説明     cmb_withEventsTest コンボボックス 直接のキーボード入力を禁止する   txt_EventLog テキストボックス コンボボックスの
イベントログが表示される    コード 下記コードは正常に動かない（myComboBox_KeyDown関数が発火しない）
フォームモジュール：MainForm 1Option Compare Database 2Option Explicit 3 4&amp;#39;************************** 5&amp;#39;*MainForm 6&amp;#39;************************** 7 8&amp;#39;定数 9 10 11&amp;#39;変数 12Private objCmbListener As clsCmbListener 13 14 15 16&amp;#39;****************************************************************************************** 17&amp;#39;*getter/setter 18&amp;#39;****************************************************************************************** 19 20 21 22 23&amp;#39;****************************************************************************************** 24&amp;#39;*関数名 ：Form_Load 25&amp;#39;*機能 ： 26&amp;#39;*引数(1) ： 27&amp;#39;****************************************************************************************** 28Private Sub Form_Load() 29 30 &amp;#39;定数 31 Const FUNC_NAME As String = &amp;#34;Form_Load&amp;#34; 32 33 &amp;#39;変数 34 Dim dicInfo As Object 35 36 On Error GoTo ErrorHandler 37 38 &amp;#39;イベントクラス設定 39 Set objCmbListener = New clsCmbListener: Set objCmbListener.</description>
    </item>
    
    <item>
      <title>[Excel VBA]ポリモーフィズムを用いて、IF文を使わずラジオボタンごとの処理分岐を行う</title>
      <link>https://dede-20191130.github.io/learnerBlog/posts/2020/11/01/polymorphism-radiobutton/</link>
      <pubDate>Sun, 01 Nov 2020 16:44:24 +0900</pubDate>
      
      <guid>https://dede-20191130.github.io/learnerBlog/posts/2020/11/01/polymorphism-radiobutton/</guid>
      <description>この記事について VBAにおいてポリモーフィズムの考え方によりコーディングを行う一例。
CallByName関数によるポリモーフィズムの考え方と、
ラジオボタン（オプションボタン）オブジェクトのtagプロパティを用いて、
IFステートメントやSelect Caseステートメントを使わずに処理分岐を行う実装例。
説明のために作成したExcelファイルとソースコードはこちらでダウンロードできます。
作成環境 Windows10
MSOffice 2016
前提 下のような画面があり、
ラジオボタンを選択し、実行ボタンを押下することで
ラジオボタンの種類に応じた処理を行う。
   名称 画像     フォーム    現在時刻を表示するラジオボタンを選択    ユーザ名を表示するラジオボタンを選択    あいさつを表示するラジオボタンを選択     オブジェクトのプロパティ    名前 種類 Caption GourpName Tag Value（初期値）     rdo_showCurrent ラジオボタン 現在時刻を表示する Group01 Current True   rdo_showUser ラジオボタン ユーザ名を表示する Group01 User False   rdo_showGreeting ラジオボタン あいさつを表示する Group01 Greeting False   btn_execute コマンドボタン 実行 -- -- --    関数概要    名前 所属モジュール/クラス 種類 機能     btn_execute_Click F_Main Subプロシージャ btn_executeのClickメソッド</description>
    </item>
    
  </channel>
</rss>
