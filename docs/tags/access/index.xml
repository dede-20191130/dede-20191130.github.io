<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Access on 学習者dedeのブログ ~プログラミング等~</title>
    <link>https://dede-20191130.github.io/learnerBlog/tags/access/</link>
    <description>Recent content in Access on 学習者dedeのブログ ~プログラミング等~</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Sat, 04 Sep 2021 10:17:36 +0900</lastBuildDate><atom:link href="https://dede-20191130.github.io/learnerBlog/tags/access/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[Access VBA] フォームのコントロール操作系の関数をどのようにユニットテストするかの方法メモ</title>
      <link>https://dede-20191130.github.io/learnerBlog/posts/2021/09/04/access-change-control-test/</link>
      <pubDate>Sat, 04 Sep 2021 10:17:36 +0900</pubDate>
      
      <guid>https://dede-20191130.github.io/learnerBlog/posts/2021/09/04/access-change-control-test/</guid>
      <description>この記事について かんたんな概要と結論 動的なフォーム生成、および動的なフォーム上のコントロール生成によって 実際に使用するフォームなどの環境から</description>
    </item>
    
    <item>
      <title>[Access VBA] RequeryとRefreshの使い分けデモ　「単票フォームの編集」編</title>
      <link>https://dede-20191130.github.io/learnerBlog/posts/2021/08/18/cut-sheet-requery-refresh/</link>
      <pubDate>Wed, 18 Aug 2021 15:06:36 +0900</pubDate>
      
      <guid>https://dede-20191130.github.io/learnerBlog/posts/2021/08/18/cut-sheet-requery-refresh/</guid>
      <description>この記事について かんたんな概要と結論 フォームでのデータ編集後、 Requeryを使うかRefreshを使うかで結果は異なる。 Refreshを使</description>
    </item>
    
    <item>
      <title>[Access VBA] 見積書作成ツール（Accessバージョン）を作成した</title>
      <link>https://dede-20191130.github.io/learnerBlog/posts/2021/02/28/create-estm-accessver/</link>
      <pubDate>Sun, 28 Feb 2021 00:34:49 +0900</pubDate>
      
      <guid>https://dede-20191130.github.io/learnerBlog/posts/2021/02/28/create-estm-accessver/</guid>
      <description>この記事について 以前、 こちらの記事で紹介したように、 Excelベースの見積書作成ツールを作成した。 記事： [Excel VBA] 見積書作成ツールを作成した 今回、</description>
    </item>
    
    <item>
      <title>[VBA, PowerShell] Accessのモジュール・クラスやクエリのSQLから特定文字列を抽出するためのテクニック</title>
      <link>https://dede-20191130.github.io/learnerBlog/posts/2020/12/19/grep-from-module-sql/</link>
      <pubDate>Sat, 19 Dec 2020 03:18:51 +0900</pubDate>
      
      <guid>https://dede-20191130.github.io/learnerBlog/posts/2020/12/19/grep-from-module-sql/</guid>
      <description>この記事について AccessのVBAツールを作成していると、 主にリファクタリングや機能追加のタイミングで、 モジュール、クラス、あるいはクエリ</description>
    </item>
    
    <item>
      <title>[VBA] クラスを利用するメリットと方法について &amp; 簡単なサンプル（２）</title>
      <link>https://dede-20191130.github.io/learnerBlog/posts/2020/11/22/excel-class-sample-02/</link>
      <pubDate>Sun, 22 Nov 2020 14:07:24 +0900</pubDate>
      
      <guid>https://dede-20191130.github.io/learnerBlog/posts/2020/11/22/excel-class-sample-02/</guid>
      <description>この記事について この記事は、 [VBA] クラスを利用するメリットと方法について &amp;amp; 簡単なサンプル（１）の続きの記事。 （１）とは違ったサンプルを用いて、前</description>
    </item>
    
    <item>
      <title>[Access VBA] サブフォーム上のレコードを挿入、削除する簡単なサンプル</title>
      <link>https://dede-20191130.github.io/learnerBlog/posts/2020/11/15/delete-record-button/</link>
      <pubDate>Sun, 15 Nov 2020 00:54:01 +0900</pubDate>
      
      <guid>https://dede-20191130.github.io/learnerBlog/posts/2020/11/15/delete-record-button/</guid>
      <description>この記事について 作成動機は、 下記の記事で起こっていたカレントレコードなしエラー(エラー番号:3021)のケースが サブフォームにおいても起こる</description>
    </item>
    
    <item>
      <title>[Access VBA] フォームのコントロールに対してWithEventsでイベントリスナークラスを作成する際に気をつけなければならないこと</title>
      <link>https://dede-20191130.github.io/learnerBlog/posts/2020/11/08/access-control-withevents/</link>
      <pubDate>Sun, 08 Nov 2020 10:26:29 +0900</pubDate>
      
      <guid>https://dede-20191130.github.io/learnerBlog/posts/2020/11/08/access-control-withevents/</guid>
      <description>この記事について Accessでフォーム上のコントロール（テキストボックス、コンボボックスなど）で、 イベント処理を共通化するためにWithEv</description>
    </item>
    
    <item>
      <title>[Access VBA] デザインビューのテーブル定義を表形式でエクスポートするAccessツールを作成した</title>
      <link>https://dede-20191130.github.io/learnerBlog/posts/2020/10/27/access-tabledef-tool/</link>
      <pubDate>Tue, 27 Oct 2020 20:29:45 +0900</pubDate>
      
      <guid>https://dede-20191130.github.io/learnerBlog/posts/2020/10/27/access-tabledef-tool/</guid>
      <description>概要 以前の記事で説明したエクスポート関数をツール化したもの（こちら） ツール化することで、VBEを開いて関数をペーストする必要が無くなった。 ま</description>
    </item>
    
    <item>
      <title>[Access VBA] デザインビューのテーブル定義を表形式でエクスポートする関数を作成した</title>
      <link>https://dede-20191130.github.io/learnerBlog/posts/2020/10/25/access-tabledef/</link>
      <pubDate>Sun, 25 Oct 2020 22:01:43 +0900</pubDate>
      
      <guid>https://dede-20191130.github.io/learnerBlog/posts/2020/10/25/access-tabledef/</guid>
      <description>この記事について Accessの各々のテーブルの内容をエクスポートする方法として、 ナビゲーションバーのテーブルの右クリックメニューからエクスポ</description>
    </item>
    
    <item>
      <title>[Access VBA] コントロールソースにユーザ定義関数を用いると列幅の自動調整が想定通りに機能しない問題の解決</title>
      <link>https://dede-20191130.github.io/learnerBlog/posts/2020/10/13/access-controlsource/</link>
      <pubDate>Tue, 13 Oct 2020 09:37:47 +0900</pubDate>
      
      <guid>https://dede-20191130.github.io/learnerBlog/posts/2020/10/13/access-controlsource/</guid>
      <description>この記事について Accessでフォーム（データシート型）を使用する際、 テキストボックスのコントロールソースとして文字列を返すユーザ定義関数を</description>
    </item>
    
  </channel>
</rss>
