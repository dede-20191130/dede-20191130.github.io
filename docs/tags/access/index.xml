<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Access on 学習者のブログ　◆プログラミング等</title>
    <link>https://dede-20191130.github.io/learnerBlog/tags/access/</link>
    <description>Recent content in Access on 学習者のブログ　◆プログラミング等</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Sun, 08 Nov 2020 10:26:29 +0900</lastBuildDate><atom:link href="https://dede-20191130.github.io/learnerBlog/tags/access/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[Access VBA] フォームのコントロールに対してWithEventsでイベントリスナークラスを作成する際に気をつけなければならないこと</title>
      <link>https://dede-20191130.github.io/learnerBlog/posts/2020/11/08/access-control-withevents/</link>
      <pubDate>Sun, 08 Nov 2020 10:26:29 +0900</pubDate>
      
      <guid>https://dede-20191130.github.io/learnerBlog/posts/2020/11/08/access-control-withevents/</guid>
      <description>この記事について Accessでフォーム上のコントロール（テキストボックス、コンボボックスなど）で、 イベント処理を共通化するためにWithEventsステートメントを用いてイベントリスナークラスを作成することを考える。
その際に、ExcelでWitheventsを使用するときと同じようなコードで作成すると、
せっかく設定したクラス側のイベントが発火してくれない事態が生じた。
その事例と、講じた対策二種類について記したい。
説明のために作成したAccessファイルとソースコードはこちらでダウンロードできます。
事例 次のような画面とコードで、
丸囲みのコンボボックスをキーボード入力できないようにする。 （先に正常に動かないコードのほうを示す）
共通化のために、
コンボボックスのKeyDownイベント関数をクラス化する。
検証のために、コンボボックスのイベント発火をトレースし、
テキストボックスにログを出力できるようにした。
画面 オブジェクトのプロパティ    名前 種類 説明     cmb_withEventsTest コンボボックス 直接のキーボード入力を禁止する   txt_EventLog テキストボックス コンボボックスの
イベントログが表示される    コード 下記コードは正常に動かない（myComboBox_KeyDown関数が発火しない）
フォームモジュール：MainForm 1Option Compare Database 2Option Explicit 3 4&amp;#39;************************** 5&amp;#39;*MainForm 6&amp;#39;************************** 7 8&amp;#39;定数 9 10 11&amp;#39;変数 12Private objCmbListener As clsCmbListener 13 14 15 16&amp;#39;****************************************************************************************** 17&amp;#39;*getter/setter 18&amp;#39;****************************************************************************************** 19 20 21 22 23&amp;#39;****************************************************************************************** 24&amp;#39;*関数名 ：Form_Load 25&amp;#39;*機能 ： 26&amp;#39;*引数(1) ： 27&amp;#39;****************************************************************************************** 28Private Sub Form_Load() 29 30 &amp;#39;定数 31 Const FUNC_NAME As String = &amp;#34;Form_Load&amp;#34; 32 33 &amp;#39;変数 34 Dim dicInfo As Object 35 36 On Error GoTo ErrorHandler 37 38 &amp;#39;イベントクラス設定 39 Set objCmbListener = New clsCmbListener: Set objCmbListener.</description>
    </item>
    
    <item>
      <title>[Access VBA] デザインビューのテーブル定義を表形式でエクスポートするAccessツールを作成した</title>
      <link>https://dede-20191130.github.io/learnerBlog/posts/2020/10/27/access-tabledef-tool/</link>
      <pubDate>Tue, 27 Oct 2020 20:29:45 +0900</pubDate>
      
      <guid>https://dede-20191130.github.io/learnerBlog/posts/2020/10/27/access-tabledef-tool/</guid>
      <description>概要 以前の記事で説明したエクスポート関数をツール化したもの（こちら）
ツール化することで、VBEを開いて関数をペーストする必要が無くなった。
また、他のAccessデータベースファイルの定義をエクスポートできるようになった。
画面で指定したAccessファイル（.mdb、.accdb）について、
すべてのテーブルのテーブル定義を表形式でエクスポートする。
エクスポート先は新規エクセルブック。テーブルデータがシートごとに格納される。
ツールはこちらからダウンロードできます。
また、ソースコードもこちらに置いてあります。
動作環境 Microsoft Officeが動作する環境。
32bit、64bitいずれも可。
機能一覧  テーブル定義の表形式でのエクスポート機能  ツールとしての長所  テーブル定義の一覧化および目視での把握が容易にできます。 手作業で表を作成するよりも効率的です。  使用方法 1. エクスポートするAccessファイルパスの選択 いずれかの方法で選択します。
1.エクスポート画面のテキストボックスに直接入力します。
2.参照ボタンをクリックします。
ファイル選択ダイアログにおいて出力対象のファイルを選択します。
テキストボックスにファイルパスが格納されます。
2. エクスポート エクスポートボタンを押下します。
対象のAccessファイルと同階層のフォルダに
次のようにエクセルファイルが出力されます。
デザインビュー表示に似せた様式で各情報が一覧できます。</description>
    </item>
    
    <item>
      <title>[Access VBA] デザインビューのテーブル定義を表形式でエクスポートする関数を作成した</title>
      <link>https://dede-20191130.github.io/learnerBlog/posts/2020/10/25/access-tabledef/</link>
      <pubDate>Sun, 25 Oct 2020 22:01:43 +0900</pubDate>
      
      <guid>https://dede-20191130.github.io/learnerBlog/posts/2020/10/25/access-tabledef/</guid>
      <description>この記事について Accessの各々のテーブルの内容をエクスポートする方法として、
 ナビゲーションバーのテーブルの右クリックメニューからエクスポート -&amp;gt; Excel、テキスト等形式を選択して出力 データベースツールタブのデータベース構造の解析 -&amp;gt; テーブル指定 -&amp;gt; 印刷、またはExcel、PDF等形式を選択して出力  の選択肢がある。
しかし、
前者は、フィールドの型や主キーの有無など、テーブルの詳細な情報はエクスポートできず、
後者は、詳細な情報をエクスポートできるが、各フィールドごとに単票形式でエクスポートデータが得られるため、デザインビューのように一覧としてテーブルの設定を把握することが難しい。
よって、既存の機能で対応できないため、
デザインビューのテーブル定義を表形式でエクスポートする関数を作成した。
作成環境 Microsoft Office 2019
機能 カレントプロジェクト（コードが貼り付けてあるAccessファイル）の
すべてのテーブルのテーブル定義を表形式でエクスポートする。
エクスポート先は新規エクセルブック。テーブルデータがシートごとに格納される。
関数概要    名前 種類 機能     exportTableDefTablesMain Subプロシージャ テーブル定義情報表形式エクスポートのMain関数   getTableDefArray Functionプロシージャ テーブルの定義情報を取得   getFieldTypeString Functionプロシージャ 引数フィールドのデータ型文字列を取得   getPKs Functionプロシージャ テーブルの主キーであるフィールド名を辞書として取得   getFKs Functionプロシージャ テーブルの外部キーであるフィールド名を辞書として取得   setWSName Functionプロシージャ 引数で指定されたエクセルシートの名前をセット    呼び出し関係  exportTableDefTablesMain  呼出 -&amp;gt; getTableDefArray  呼出 -&amp;gt; getFieldTypeString 呼出 -&amp;gt; getPKs 呼出 -&amp;gt; getFKs   呼出 -&amp;gt; setWSName    コード [exportTableDefTablesMain] 1&amp;#39;****************************************************************************************** 2&amp;#39;*関数名 ：exportTableDefTablesMain 3&amp;#39;*機能 ：テーブル定義情報テーブルを作成 4&amp;#39;*引数(1) ： 5&amp;#39;****************************************************************************************** 6Public Sub exportTableDefTablesMain() 7 8 &amp;#39;定数 9 Const FUNC_NAME As String = &amp;#34;exportTableDefTablesMain&amp;#34; 10 11 &amp;#39;変数 12 Dim xlApp As Object 13 Dim wb As Object 14 Dim tdf As DAO.</description>
    </item>
    
    <item>
      <title>[Access VBA] コントロールソースにユーザ定義関数を用いると列幅の自動調整が想定通りに機能しない問題の解決</title>
      <link>https://dede-20191130.github.io/learnerBlog/posts/2020/10/13/access-controlsource/</link>
      <pubDate>Tue, 13 Oct 2020 09:37:47 +0900</pubDate>
      
      <guid>https://dede-20191130.github.io/learnerBlog/posts/2020/10/13/access-controlsource/</guid>
      <description>この記事について Accessでフォーム（データシート型）を使用する際、 テキストボックスのコントロールソースとして文字列を返すユーザ定義関数を指定すると、 フォームの列幅の自動調整の動作が想定通りにならない問題がある。
例えば、ユーザ定義関数で長い文字列を取得すると、文字列がフィールドに収まりきらず見切れてしまう。
その解決策を模索した。
要約 ユーザ定義関数の呼び出しタイミングが FormのResizeプロシージャよりも後であるため、 対象のテキストボックスに関しては、
1Private Sub Form_Resize() 2 3 &amp;#39;...code 4 5 ctl.ColumnWidth = -2 6 7 &amp;#39;...code 8 9End Sub による自動調整が機能しない。
そのため、下記のいずれかの措置をとる。
 ユーザ定義関数の処理にControl.ColumnWidth = -2が追加された関数を作成する。 Resizeする際に長さを明示的に指定。  本文 前提 このようなテーブルT_01がある。
T_01をサブフォームに組み込んで、このようなフォームF_01（およびサブフォームSubF_01）を表示する。
このとき、各列ID、_Name、sizeの列幅を自動で調整したい。
また、あたらしくsize typeテキスト列を追加し、
sizeの値ごとにS,M,Lのサイズ記号を示す文字列「This is ○ type for he/she&#39;s size.」を格納したい。
こちらの列幅も自動で調整したい。
環境 Microsoft Access 2019
実装 サブフォームのResizeプロシージャで
各々のテキストボックスに対して
列幅を指定した。
コントロールのColumnWidthの値を-2と指定することで列幅が自動調整される。
1&amp;#39;****************************************************************************************** 2&amp;#39;*関数名 ：リサイズ 3&amp;#39;*機能 ： 4&amp;#39;*引数(1) ： 5&amp;#39;****************************************************************************************** 6Private Sub Form_Resize() 7 8 &amp;#39;定数 9 Const FUNC_NAME As String = &amp;#34;Form_Resize&amp;#34; 10 11 &amp;#39;変数 12 Dim ctl As Access.</description>
    </item>
    
  </channel>
</rss>
